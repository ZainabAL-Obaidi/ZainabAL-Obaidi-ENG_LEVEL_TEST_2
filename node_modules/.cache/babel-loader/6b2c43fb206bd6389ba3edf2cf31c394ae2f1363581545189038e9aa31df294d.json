{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      currentQuestion: null,\n      userAnswer: '',\n      feedback: '',\n      questionIndex: 0,\n      questions: [],\n      answers: []\n    };\n  },\n  methods: {\n    async fetchQuestion() {\n      // Fetch question from the backend (implement the backend in Step 3)\n      const response = await fetch('/api/get-question', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          questionIndex: this.questionIndex,\n          answers: this.answers\n        })\n      });\n      const data = await response.json();\n      this.currentQuestion = data.question;\n    },\n    submitAnswer() {\n      this.answers.push(this.userAnswer);\n      this.userAnswer = '';\n      this.questionIndex++;\n      if (this.questionIndex < 3) {\n        this.fetchQuestion();\n      } else {\n        this.getFeedback();\n      }\n    },\n    async getFeedback() {\n      // Fetch feedback from the backend (implement the backend in Step 3)\n      const response = await fetch('/api/get-feedback', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          answers: this.answers\n        })\n      });\n      const data = await response.json();\n      this.feedback = data.feedback;\n      this.currentQuestion = null;\n    }\n  },\n  created() {\n    this.fetchQuestion();\n  }\n};","map":{"version":3,"names":["data","currentQuestion","userAnswer","feedback","questionIndex","questions","answers","methods","fetchQuestion","response","fetch","method","headers","body","JSON","stringify","json","question","submitAnswer","push","getFeedback","created"],"sources":["/home/kurs/english-level-test/src/components/TestComponent.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>English Level Test</h1>\n      <div v-if=\"currentQuestion\">\n        <p>{{ currentQuestion.question }}</p>\n        <input v-model=\"userAnswer\" @keyup.enter=\"submitAnswer\" />\n        <button @click=\"submitAnswer\">Submit</button>\n      </div>\n      <div v-else>\n        <p>{{ feedback }}</p>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        currentQuestion: null,\n        userAnswer: '',\n        feedback: '',\n        questionIndex: 0,\n        questions: [],\n        answers: [],\n      };\n    },\n    methods: {\n      async fetchQuestion() {\n        // Fetch question from the backend (implement the backend in Step 3)\n        const response = await fetch('/api/get-question', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ questionIndex: this.questionIndex, answers: this.answers }),\n        });\n        const data = await response.json();\n        this.currentQuestion = data.question;\n      },\n      submitAnswer() {\n        this.answers.push(this.userAnswer);\n        this.userAnswer = '';\n        this.questionIndex++;\n        if (this.questionIndex < 3) {\n          this.fetchQuestion();\n        } else {\n          this.getFeedback();\n        }\n      },\n      async getFeedback() {\n        // Fetch feedback from the backend (implement the backend in Step 3)\n        const response = await fetch('/api/get-feedback', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ answers: this.answers }),\n        });\n        const data = await response.json();\n        this.feedback = data.feedback;\n        this.currentQuestion = null;\n      },\n    },\n    created() {\n      this.fetchQuestion();\n    },\n  };\n  </script>\n  "],"mappings":";AAeE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,IAAI;MACrBC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE,CAAC;MAChBC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB;MACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,mBAAmB,EAAE;QAChDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEX,aAAa,EAAE,IAAI,CAACA,aAAa;UAAEE,OAAO,EAAE,IAAI,CAACA;QAAQ,CAAC;MACnF,CAAC,CAAC;MACF,MAAMN,IAAG,GAAI,MAAMS,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClC,IAAI,CAACf,eAAc,GAAID,IAAI,CAACiB,QAAQ;IACtC,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACZ,OAAO,CAACa,IAAI,CAAC,IAAI,CAACjB,UAAU,CAAC;MAClC,IAAI,CAACA,UAAS,GAAI,EAAE;MACpB,IAAI,CAACE,aAAa,EAAE;MACpB,IAAI,IAAI,CAACA,aAAY,GAAI,CAAC,EAAE;QAC1B,IAAI,CAACI,aAAa,CAAC,CAAC;MACtB,OAAO;QACL,IAAI,CAACY,WAAW,CAAC,CAAC;MACpB;IACF,CAAC;IACD,MAAMA,WAAWA,CAAA,EAAG;MAClB;MACA,MAAMX,QAAO,GAAI,MAAMC,KAAK,CAAC,mBAAmB,EAAE;QAChDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAET,OAAO,EAAE,IAAI,CAACA;QAAQ,CAAC;MAChD,CAAC,CAAC;MACF,MAAMN,IAAG,GAAI,MAAMS,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClC,IAAI,CAACb,QAAO,GAAIH,IAAI,CAACG,QAAQ;MAC7B,IAAI,CAACF,eAAc,GAAI,IAAI;IAC7B;EACF,CAAC;EACDoB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACb,aAAa,CAAC,CAAC;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}