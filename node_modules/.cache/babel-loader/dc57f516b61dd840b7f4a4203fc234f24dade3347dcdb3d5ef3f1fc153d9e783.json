{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      currentQuestion: null,\n      userAnswer: '',\n      feedback: '',\n      questionIndex: 0,\n      questions: [],\n      answers: []\n    };\n  },\n  methods: {\n    async fetchQuestion() {\n      try {\n        const response = await fetch('/api/get-question', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            questionIndex: this.questionIndex,\n            answers: this.answers\n          })\n        });\n        const data = await response.json();\n        this.currentQuestion = data.question;\n      } catch (error) {\n        console.error('Error fetching question:', error);\n      }\n    },\n    async submitAnswer() {\n      this.answers.push(this.userAnswer);\n      this.userAnswer = '';\n      this.questionIndex++;\n      if (this.questionIndex < 3) {\n        await this.fetchQuestion();\n      } else {\n        await this.getFeedback();\n      }\n    },\n    async getFeedback() {\n      try {\n        const response = await fetch('/api/get-feedback', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            answers: this.answers\n          })\n        });\n        const data = await response.json();\n        this.feedback = data.feedback;\n        this.currentQuestion = null;\n      } catch (error) {\n        console.error('Error fetching feedback:', error);\n      }\n    }\n  },\n  async created() {\n    await this.fetchQuestion();\n  }\n};","map":{"version":3,"names":["data","currentQuestion","userAnswer","feedback","questionIndex","questions","answers","methods","fetchQuestion","response","fetch","method","headers","body","JSON","stringify","json","question","error","console","submitAnswer","push","getFeedback","created"],"sources":["/home/kurs/english-level-test/src/components/TestComponent.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>English Level Test</h1>\n      <div v-if=\"currentQuestion\">\n        <p>{{ currentQuestion.question }}</p>\n        <input v-model=\"userAnswer\" @keyup.enter=\"submitAnswer\" />\n        <button @click=\"submitAnswer\">Submit</button>\n      </div>\n      <div v-else>\n        <p>{{ feedback }}</p>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        currentQuestion: null,\n        userAnswer: '',\n        feedback: '',\n        questionIndex: 0,\n        questions: [],\n        answers: [],\n      };\n    },\n    methods: {\n      async fetchQuestion() {\n        try {\n          const response = await fetch('/api/get-question', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ questionIndex: this.questionIndex, answers: this.answers }),\n          });\n          const data = await response.json();\n          this.currentQuestion = data.question;\n        } catch (error) {\n          console.error('Error fetching question:', error);\n        }\n      },\n      async submitAnswer() {\n        this.answers.push(this.userAnswer);\n        this.userAnswer = '';\n        this.questionIndex++;\n        if (this.questionIndex < 3) {\n          await this.fetchQuestion();\n        } else {\n          await this.getFeedback();\n        }\n      },\n      async getFeedback() {\n        try {\n          const response = await fetch('/api/get-feedback', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ answers: this.answers }),\n          });\n          const data = await response.json();\n          this.feedback = data.feedback;\n          this.currentQuestion = null;\n        } catch (error) {\n          console.error('Error fetching feedback:', error);\n        }\n      },\n    },\n    async created() {\n      await this.fetchQuestion();\n    },\n  };\n  </script>\n  "],"mappings":";AAeE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,IAAI;MACrBC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE,CAAC;MAChBC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,mBAAmB,EAAE;UAChDC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEX,aAAa,EAAE,IAAI,CAACA,aAAa;YAAEE,OAAO,EAAE,IAAI,CAACA;UAAQ,CAAC;QACnF,CAAC,CAAC;QACF,MAAMN,IAAG,GAAI,MAAMS,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClC,IAAI,CAACf,eAAc,GAAID,IAAI,CAACiB,QAAQ;MACtC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACD,MAAME,YAAYA,CAAA,EAAG;MACnB,IAAI,CAACd,OAAO,CAACe,IAAI,CAAC,IAAI,CAACnB,UAAU,CAAC;MAClC,IAAI,CAACA,UAAS,GAAI,EAAE;MACpB,IAAI,CAACE,aAAa,EAAE;MACpB,IAAI,IAAI,CAACA,aAAY,GAAI,CAAC,EAAE;QAC1B,MAAM,IAAI,CAACI,aAAa,CAAC,CAAC;MAC5B,OAAO;QACL,MAAM,IAAI,CAACc,WAAW,CAAC,CAAC;MAC1B;IACF,CAAC;IACD,MAAMA,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMb,QAAO,GAAI,MAAMC,KAAK,CAAC,mBAAmB,EAAE;UAChDC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAET,OAAO,EAAE,IAAI,CAACA;UAAQ,CAAC;QAChD,CAAC,CAAC;QACF,MAAMN,IAAG,GAAI,MAAMS,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClC,IAAI,CAACb,QAAO,GAAIH,IAAI,CAACG,QAAQ;QAC7B,IAAI,CAACF,eAAc,GAAI,IAAI;MAC7B,EAAE,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;EACF,CAAC;EACD,MAAMK,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACf,aAAa,CAAC,CAAC;EAC5B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}